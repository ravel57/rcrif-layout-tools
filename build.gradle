plugins {
	id 'java'
	id 'application'
	id 'org.jetbrains.kotlin.jvm' version '1.8.22'
	id 'org.javamodularity.moduleplugin' version '1.8.12'
	id 'org.openjfx.javafxplugin' version '0.0.13'
	id 'org.beryx.jlink' version '2.25.0'
}

tasks.named('compileKotlin') {
	destinationDirectory.set(layout.buildDirectory.dir('classes/java/main'))
}

group 'ru.ravel'
version '0.1.4'

repositories {
	mavenCentral()
}

ext {
	junitVersion = '5.10.0'
}


tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

application {
	mainModule = 'ru.ravel.rcriflayouttool'
	mainClass = 'ru.ravel.rcriflayouttool.RCrifLayoutToolKt'
}
kotlin {
	jvmToolchain(17)
}

javafx {
	version = '21'
	modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

	implementation 'com.fasterxml.jackson.core:jackson-databind:2.19.2'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.19.2'

	implementation 'org.fxmisc.richtext:richtextfx:0.11.5'
	implementation 'io.github.java-diff-utils:java-diff-utils:4.16'

	testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}

test {
	useJUnitPlatform()
}

jlink {
	imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
	options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
	launcher {
		name = 'app'
	}
}

jlinkZip {
	group = 'distribution'
}


jar {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	from(sourceSets.main.output)
	from {
		configurations.runtimeClasspath
				.filter { it.name.endsWith('.jar') && !it.name.startsWith('javafx-') }
				.collect { zipTree(it) }
	}
	exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.EC'

	manifest {
		attributes(
				'Main-Class': 'ru.ravel.rcriflayouttool.RCrifLayoutToolKt'
		)
	}
}